@model XenonCMS.ViewModels.Contact.Index

@{
    ViewBag.Title = "Contact";
}

<h2>Contact</h2>
<h4>Please fill out the form below if you need to get ahold of me</h4>@*TODO Make customizable*@

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Count() > 0))
    {
        <div class="alert alert-danger">
            <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
            <strong>Please correct the following problems:</strong>
            @Html.ValidationSummary(false)
        </div>
    }

    <div class="form-horizontal">
        @if (!string.IsNullOrWhiteSpace(ViewBag.Message))
        {
            <div class="alert alert-dismissable alert-@ViewBag.MessageClass">
                <button data-dismiss="alert" class="close" type="button">×</button>
                @Html.Raw(ViewBag.Message)
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Subject, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Subject, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Subject)
            </div>
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.Url, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Url, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Url)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { @class = "form-control", rows = 5 })
                @Html.ValidationMessageFor(model => model.Body)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary btn-lg" />
            </div>
        </div>
    </div>
}