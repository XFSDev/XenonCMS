@using XenonCMS.Classes
@{
    ViewBag.Title = "Menu Editor";
}

<h2>@ViewBag.Title</h2>

<p>Drag and drop the menu items to change the order of the links.  Keep in mind there isn't a huge amount of horizontal space on small tablets, so you probably don't want too many top level items (unless the text is really short)</p>

<p>Also, you may only nest links one level deep (ie you can have a Products menu with Product 1, Product 2, etc, below it, but you cannot have a Products menu with a Free Products sub menu with Free Product 1, Free Product 2, etc, below it).  If that didn't make sense, don't worry, the system will notify you if there is a problem.</p>

<ol class="vertical">
    @Html.Raw(ViewBag.Menu)
</ol>

<div class="row">
    <h3>Previews</h3>
    <nav class="navbar navbar-@Caching.GetNavBarStyle()" style="width: 750px;">
        <div class="container-fluid">
            <div class="navbar-header">
                <button data-target="#navbar-preview-sm" data-toggle="collapse" class="navbar-toggle collapsed" type="button">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="#" class="navbar-brand">@Caching.GetSiteTitle()</a>
            </div>

            <div id="navbar-preview-sm" class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-left">
                    @*Left nav will be added here*@
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @*Right nav will be added here*@
                </ul>
            </div>
        </div>
    </nav>

    <nav class="navbar navbar-@Caching.GetNavBarStyle()" style="width: 970px;">
        <div class="container-fluid">
            <div class="navbar-header">
                <button data-target="#navbar-preview-md" data-toggle="collapse" class="navbar-toggle collapsed" type="button">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="#" class="navbar-brand">@Caching.GetSiteTitle()</a>
            </div>

            <div id="navbar-preview-md" class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-left">
                    @*Left nav will be added here*@
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @*Right nav will be added here*@
                </ul>
            </div>
        </div>
    </nav>

    <nav class="navbar navbar-@Caching.GetNavBarStyle()" style="width: 1170px;">
        <div class="container-fluid">
            <div class="navbar-header">
                <button data-target="#navbar-preview-lg" data-toggle="collapse" class="navbar-toggle collapsed" type="button">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="#" class="navbar-brand">@Caching.GetSiteTitle()</a>
            </div>

            <div id="navbar-preview-lg" class="collapse navbar-collapse">
                <ul class="nav navbar-nav navbar-left">
                    @*Left nav will be added here*@
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    @*Right nav will be added here*@
                </ul>
            </div>
        </div>
    </nav>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="submit" id="cmdSubmit" value="Save Changes" class="btn btn-success btn-lg" />
    <text>&nbsp;</text> <span id="lblError" class="text-danger"></span>
    <div class="pull-right">
        <a href="@Url.Content("~")" class="btn btn-danger btn-lg">Cancel</a>
    </div>
    <br /><br />
    @Html.TextArea("txtJson", new { @class = "hide form-control", rows = "20" })
}

<br />
<p class="small">Drag &amp; Drop support courtesy of <a href="http://johnny.github.io/jquery-sortable" target="_blank">the amazing jQuery Sortable</a></p>



@section Head {
    <style type="text/css">
        body.dragging, body.dragging * {
            cursor: move !important;
        }

        .dragged {
            position: absolute;
            top: 0;
            opacity: .5;
            z-index: 2000;
        }

        ol.vertical {
            margin: 0 0 9px 0;
            min-height: 10px;
            padding: 0;
        }

            ol.vertical li {
                display: block;
                margin: 5px;
                padding: 5px;
                border: 1px solid #CCC;
                /*color: $linkColor;*/
                background: #eee;
            }

                ol.vertical li.placeholder {
                    position: relative;
                    margin: 0;
                    padding: 0;
                    border: none;
                }

                    ol.vertical li.placeholder:before {
                        position: absolute;
                        content: "";
                        width: 0;
                        height: 0;
                        margin-top: -5px;
                        left: -5px;
                        top: -4px;
                        border: 5px solid transparent;
                        border-left-color: red;
                        border-right: none;
                    }

                ol.vertical li li li {
                    background-color: lightcoral;
                    color: white;
                }
    </style>
}





@section Scripts {
    @*TODO Add timestamps to css and js with no version in filename*@
    <script src="@Url.Content("~/Scripts/jquery-sortable-min.js")"></script>
    <script>
        $(function () {
            function UpdateJson() {
                // Clear previews
                $('#navbar-preview-sm .navbar-left').empty();
                $('#navbar-preview-sm .navbar-right').empty();
                $('#navbar-preview-md .navbar-left').empty();
                $('#navbar-preview-md .navbar-right').empty();
                $('#navbar-preview-lg .navbar-left').empty();
                $('#navbar-preview-lg .navbar-right').empty();

                var data = objSortable.sortable("serialize").get();
                var jsonString = JSON.stringify(data, null, ' ').replace(/\r/g, '').replace(/\n/g, '').replace(/\s/g, '').replace(/\[\[/g, '[').replace(/\]\]/g, ']');
                var jsonObject = JSON.parse(jsonString);
                jsonString = JSON.stringify(jsonObject, null, ' ');
                $('#txtJson').text(jsonString);

                // Ensure there's no >2 level menus
                for (var i = 0; i < jsonObject.length; i++) {
                    for (var j = 0; j < jsonObject[i].children.length; j++) {
                        if (jsonObject[i].children[j].children.length > 0) {
                            $('#lblError').text('Sub-menu ' + jsonObject[i].text + ' -> ' + jsonObject[i].children[j].text + ' cannot contain the ' + jsonObject[i].children[j].children[0].text + ' menu item');
                            $('#cmdSubmit').prop('disabled', true);
                            return;
                        }
                    }
                }

                $('#lblError').text('');
                $('#cmdSubmit').prop('disabled', false);

                // Update previews
                for (var i = 0; i < jsonObject.length; i++) {
                    var TopLevelItem = '';
                    if (jsonObject[i].children.length === 0) {
                        TopLevelItem = '<li><a href="#">' + jsonObject[i].text + '</a></li>';
                    } else {
                        var ChildItems = '';
                        for (var j = 0; j < jsonObject[i].children.length; j++) {
                            ChildItems += '<li><a href="#">' + jsonObject[i].children[j].text + '</a></li>';
                        }

                        TopLevelItem = '<li class="dropdown"><a data-toggle="dropdown" class="dropdown-toggle" href="#" aria-expanded="false">' + jsonObject[i].text + ' <b class="caret"></b></a><ul class="dropdown-menu">' + ChildItems + '</ul></li>';
                    }

                    $('#navbar-preview-sm .navbar-left').append(TopLevelItem);
                    $('#navbar-preview-md .navbar-left').append(TopLevelItem);
                    $('#navbar-preview-lg .navbar-left').append(TopLevelItem);
                }
            }

            var objSortable = $("ol.vertical").sortable({
                onDrop: function ($item, container, _super) {
                    UpdateJson();
                    _super($item, container);
                }
            });

            UpdateJson();
        });
    </script>
}